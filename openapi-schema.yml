openapi: 3.0.2
info:
  title: 'StudySafe Core API'
  version: '1.0'
  description: 'An API to create, delete, modify and view students/venues/entry&exit/users records'
tags:
 - name: member
   description: 'Operation on Students list'
 - name: venue
   description: 'Operation on Venues list'
 - name: device
   description: 'Operation on entry/exit records'
 - name: user
   description: 'Operation on list of StudySafe users'
paths:
  /api/members/:
    get:
      operationId: listMembers
      description: 'get the list of all members'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
          description: 'an array of all students'
      tags:
      - member
    post:
      operationId: createMember
      description: 'create a new student'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Member'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: 'respond with the input student info'
      tags:
      - member
  /api/members/{id}/:
    get:
      operationId: retrieveMember
      description: 'retrive student record'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this member.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: 'the student info'
      tags:
      - member
    put:
      operationId: updateMember
      description: 'update the student record'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this member.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Member'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: 'the updated info'
      tags:
      - member
    patch:
      operationId: partialUpdateMember
      description: 'partially update the student'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this member.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Member'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: 'the updated info'
      tags:
      - member
    delete:
      operationId: destroyMember
      description: 'delete the student'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this member.
        schema:
          type: string
      responses:
        '204':
          description: 'response code only'
      tags:
      - member
  /api/venues/:
    get:
      operationId: listVenues
      description: 'retreive a list of all venue'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Venue'
          description: 'list of all venues'
      tags:
      - venue
    post:
      operationId: createVenue
      description: 'create a venue'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Venue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Venue'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: 'the venue created'
      tags:
      - venue
  /api/venues/{id}/:
    get:
      operationId: retrieveVenue
      description: 'retrive a venue'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this venue.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: 'the request venue details'
      tags:
      - venue
    put:
      operationId: updateVenue
      description: 'update a venue'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this venue.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Venue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Venue'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: 'updated venue details'
      tags:
      - venue
    patch:
      operationId: partialUpdateVenue
      description: 'partially update a venue'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this venue.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Venue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Venue'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: 'updated venue details'
      tags:
      - venue
    delete:
      operationId: destroyVenue
      description: 'remove a venue'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this venue.
        schema:
          type: string
      responses:
        '204':
          description: 'only code for confirmation'
      tags:
      - venue
  /api/devices/:
    get:
      operationId: listDevices
      description: 'retrieve a list of entry/exit records'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
          description: 'list of entry/exit records'
      tags:
      - device
    post:
      operationId: createDevice
      description: 'create a new enty/exit record'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 'detail of the created record'
      tags:
      - device
  /api/devices/{id}/:
    get:
      operationId: retrieveDevice
      description: 'retrive detail of a record'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this device.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 'detail of the requested record'
      tags:
      - device
    put:
      operationId: updateDevice
      description: 'update a record'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this device.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 'details of the updated record'
      tags:
      - device
    patch:
      operationId: partialUpdateDevice
      description: 'partially update a reocrd'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this device.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 'details of the updated record'
      tags:
      - device
    delete:
      operationId: destroyDevice
      description: 'remove a record'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this device.
        schema:
          type: string
      responses:
        '204':
          description: 'code only for confirmation'
      tags:
      - device
  /api/users/:
    get:
      operationId: listUsers
      description: 'retrive a list of StudySafe users'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: 'list of StudySafe users'
      tags:
      - user
    post:
      operationId: createUser
      description: 'create a new user'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 'details of the created user'
      tags:
      - user
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: 'retireve detail of a user'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 'details of the requested user'
      tags:
      - user
    put:
      operationId: updateUser
      description: 'update a user'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 'detail of the updated user'
      tags:
      - user
    patch:
      operationId: partialUpdateUser
      description: 'partially update a user'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 'detail of the updated user'
      tags:
      - user
    delete:
      operationId: destroyUser
      description: 'remove a user'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: 'code only for confirmation'
      tags:
      - user
components:
  schemas:
    Member:
      type: object
      properties:
        hku_id:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 150
        is_close_contact:
          type: boolean
      required:
      - hku_id
      - name
      - is_close_contact
    Venue:
      type: object
      properties:
        venue_code:
          type: string
          maxLength: 20
        location:
          type: string
          maxLength: 150
        venue_type:
          type: string
          maxLength: 2
        capacity:
          type: integer
        is_poorly_ventilated_area:
          type: boolean
      required:
      - venue_code
      - location
      - venue_type
      - capacity
      - is_poorly_ventilated_area
    Device:
      type: object
      properties:
        hku_id:
          type: string
          maxLength: 10
        venue_code:
          type: string
          maxLength: 150
        time_of_record:
          type: string
          format: date-time
        is_an_entry_record:
          type: boolean
      required:
      - hku_id
      - venue_code
      - time_of_record
      - is_an_entry_record
    User:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 50
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          maxLength: 100
        is_admin:
          type: boolean
      required:
      - username
      - password
      - first_name
      - last_name
      - email
      - is_admin
